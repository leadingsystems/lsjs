#lsOcNaviToggler {
  .fa-icon;
  .fas;

  position: fixed;
  top: 2.7rem;
  right: .7rem;
  font-size: 3rem;
  cursor: pointer;
  display: none;
  z-index: 99001;

  &::after {
    content: @fa-var-bars;
  }

  &.lsOcNaviOpen {
    position: fixed;

    &:after {
      content: @fa-var-times;
    }
  }
}

#lsOcNavi {
  display: none;
  position: fixed;
  top: 0;
  width: 100%;
  height: 100%;
  max-height: 100%;
  padding: 1rem;
  margin-bottom: 2rem !important;
  overflow: hidden;
  overflow-y: scroll;
  background-color: @ls-color-white;
  box-shadow: 0 .4rem 1rem @ls-color-black;
  z-index: 99000;
}

body.useOcNavi {
  &.lsOcNaviRunning,
  &.lsOcNaviOpen {
    overflow: hidden;
  }

  /*
   * Show the off canvas toggler regardless of the screen size if
   * the ocNavi is open. Otherwise the ocNavi could not be closed
   * if the screen size has increased while the ocNavi is open.
   */
  &.lsOcNaviOpen #lsOcNaviToggler {
    display: block;
  }
}

@media only screen and (max-width: @ls-oc-navi-max-width) {
  /*
   * show the off canvas navigation so that it is always visible
   * if the off canvas javascript is not in use
   */
  #lsOcNavi {
    display: block;
  }

  body.useOcNavi {
    /*
     * hide the off canvas navigation if the
     * off canvas javascript is in use
     */
    #lsOcNavi {
      display: none;
      margin-bottom: 0;
    }

    /*
     * show the off canvas toggler if the
     * off canvas javascript is in use
     */
    #lsOcNaviToggler {
      display: block;
    }
  }
}


/*
 * Fallback if no javascript is active
 */
@keyframes oc_height {
  0% {
    height: 0px;
  }
  50% {
    height: 0px;
  }
  100% {
    height: 150px;
  }
}

@keyframes oc_opacity {
  0% {
    opacity: 0;
  }
  50% {
    opacity: 0;
  }
  100% {
    opacity: 1;
  }
}

body:not(.useOcNavi) {
  #offCanvasContainer {
    display: none;
    padding-top: 4rem !important;
      overflow: hidden;
      height: auto;
      animation: oc_height 2.5s, oc_opacity 5s;
  }

  @media only screen and (max-width: @ls-oc-navi-max-width) {
    #offCanvasContainer {
      display: block;
    }
  }
}